#!/usr/bin/env python
# ##############################################################################
# The contents of this file are subject to the PyTis Public License Version    #
# 2.0 (the "License"); you may not use this file except in compliance with     #
# the License. You may obtain a copy of the License at                         #
#                                                                              #
#     http://www.PyTis.com/License/                                            #
#                                                                              #
#     Copyright (c) 2018 Josh Lee                                              #
#                                                                              #
# Software distributed under the License is distributed on an "AS IS" basis,   #
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License     #
# for the specific language governing rights and limitations under the         #
# License.                                                                     #
#                                                                              #
# @auto-generated by the PyTis Copyright Tool on 06:30 04 Apr, 2018            #
############################################################################## #

import sys
import os, glob
from threading import Timer
import socket

import json

python_version = float("%s.%s"%(sys.version_info.major,sys.version_info.minor))

if python_version >= 3.0:
        from urllib.request import urlopen as urlopen
else:
        import urllib2
        from urllib2 import urlopen





def end(code=0): sys.exit(code)

def handler(fh):
        fh.close()

def download(url):
        timeout = 10.0
        try:
                fh = urlopen(url, timeout = timeout)
        except urllib2.URLError as e:
                sys.stderr.write("\n%s\n"% str(e))
                return end(1)
        except ValueError as e:
                sys.stderr.write(str(e))
                return end(1)
        except urllib2.URLError as e:
                # For Python 2.6
                if isinstance(e.reason, socket.timeout):
                        log.error("Socket timeout")
                        return end(1)
                else:
                        # reraise the original error
                        raise
        except socket.timeout as e:
                # For Python 2.7
                log.error("Socket timeout")
                return end(1)

        t = Timer(timeout, handler,[fh])
        t.start()
        data = fh.read()
        t.cancel()
        return data


def run():
	url = 'https://apiv2.bitcoinaverage.com/indices/local/ticker/BTCUSD'
	url = 'https://apiv2.bitcoinaverage.com/indices/local/ticker/U.CASHUSD'
	if len(sys.argv) > 1: url = str(sys.argv[1:][0])


	try:
					data = json.loads(download(url))
	except ValueError as e:
					sys.stderr.write("\n%s\n" % str(e))
					end(1)


	from pprint import pprint
	pprint(dict(ask=data['ask'],bid=data['bid'],avg=data['averages']['day']))


def main():

	from modules import *
	class dummy(object): pass
	s = Service(dummy, 'English')

	print (s.name)

def loadModules():
	mod_dir = os.path.abspath(os.path.join( os.path.abspath(os.path.dirname(__file__)), 'modules'))
	if not os.path.exists(mod_dir):
		# We have a BIG problem, no modules directory.
		self.log.error("Modules directory is missing!")
		self.log.error("Modules directory path should be: %s" % mod_dir)
		sys.exit(1)

	sys.path.append(mod_dir)
	mods = [f for f in glob.glob(os.path.join(mod_dir,'*.py')) if not os.path.basename(f).startswith('__')]

	for mod in mods:
		mod_name = os.path.basename(mod).strip('.py')
		print('mod name: %s' % mod_name)
		mod = __import__(mod_name)
		obj = getattr(mod,mod_name)
		obj()

	print( mods)

	print(' here : here: %s ' % os.path.realpath(os.path.dirname(__file__)))

if __name__ == '__main__':
	sys.exit(main())


